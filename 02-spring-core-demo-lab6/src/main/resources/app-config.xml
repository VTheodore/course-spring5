<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="course.spring.coredemo" />
    <context:property-placeholder location="classpath:articles.properties"/>

    <bean id="mappings"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="properties">
            <value>
                articles.count=2
            </value>
        </property>
        <property name="locations" value="classpath:articles.properties"/>
        <property name="ignoreResourceNotFound" value="true" />
    </bean>

    <bean id="provider" class="course.spring.coredemo.dao.MockArticleRepository" />
    <bean id="alternativeProvider" class="course.spring.coredemo.dao.DIArticleRepository" />
    <!--<bean id="presenterFactory" class="course.spring.coredemo.domain.ArticlePresenterFactory"-->
          <!--c:provider-ref="provider"/>-->
    <bean id="presenter" class="course.spring.coredemo.domain.ConsoleArticlePresenter"
        p:provider-ref="alternativeProvider" p:title="My Blog Articles in p: Namespace"/>
        <!--<property name="provider">-->
            <!--<ref bean="provider" />-->
        <!--</property>-->
        <!--<property name="title" value="My Blog Articles" />-->
    <!--</bean>-->
          <!--factory-bean="presenterFactory" factory-method="creteArticlePresenter" />-->
        <!--factory-method="createInstance" c:provider-ref="provider" />-->
    <bean id="article" scope="prototype" class="course.spring.coredemo.model.Article"
          p:author-ref="author" init-method="init"/>
    <bean id="parent" abstract="true" class="course.spring.coredemo.model.Author">
        <property name="emails">
            <props>
                <prop key="admin">admin@example.com</prop>
                <prop key="support">support@example.com</prop>
            </props>
        </property>
    </bean>
    <bean id="author" parent="parent" p:name="Bruce Eckel" p:age="48">
        <property name="emails">
            <props merge="true">
                <prop key="sales">sales@example.com</prop>
                <prop key="support">support@example.co.uk</prop>
            </props>
        </property>
    </bean>
</beans>
