<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
    <context:annotation-config/>
    <context:component-scan base-package="course.spring.springcoredemo" />
    <!--<context:property-placeholder location="classpath:articles.properties"/>-->
    <!--<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>-->
    <bean id="provider" name="provider"
          class="course.spring.springcoredemo.dao.ArticlesRepositoryImpl" init-method="init"/>
    <bean id="alternativeProvider"
          class="course.spring.springcoredemo.dao.AlternativeArticleRepository"/>
    <bean id="presenter" name="presenter"
          class="course.spring.springcoredemo.domain.ConsoleArticlePresenter" depends-on="provider" lazy-init="true">
        <!--<constructor-arg index="0" name="provider"-->
                         <!--type="course.spring.springcoredemo.dao.ArticlesRepository">-->
            <!--<ref bean="provider" />-->
        <!--</constructor-arg>-->
        <property name="provider">
            <ref bean="alternativeProvider" />
        </property>
        <property name="title">
            <value>Hello Spring DI</value>
        </property>
    </bean>
    <bean id="parent" abstract="true" class="course.spring.springcoredemo.model.Author">
        <property name="emails">
            <props>
                <prop key="admin">admin@example.com</prop>
                <prop key="support">support@example.com</prop>
            </props>
        </property>
    </bean>
    <bean id="author" parent="parent" scope="singleton" p:name="Ivan Petrov" p:age="38">
        <property name="emails">
            <props merge="true">
                <prop key="sales">sales@example.com</prop>
                <prop key="support">support@example.co.uk</prop>
            </props>
        </property>
    </bean>
    <bean id="article" class="course.spring.springcoredemo.model.Article" p:author-ref="author"
        scope="prototype">
        <!--<property name="author" ref="author"/>-->
    </bean>

    <bean id="mappings"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <!--typed as a java.util.Properties-->
        <property name="properties">
            <value>
                articles.title1=Welcome to Spring 5 - XML
                articles.content1=Spring 5 is great beacuse ... - XML
                articles.title2=Dependency Injection - XML
                articles.content2=DI is easy ... - XML
            </value>
        </property>
        <property name="locations" value="classpath:articles.properties"/>
        <property name="ignoreResourceNotFound" value="true" />
    </bean>

</beans>
